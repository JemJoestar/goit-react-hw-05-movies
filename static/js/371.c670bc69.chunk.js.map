{"version":3,"file":"static/js/371.c670bc69.chunk.js","mappings":"6MAIaA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,eAAIC,UAAU,aAAd,UACE,UAAC,KAAD,CACEC,GAAE,yBAAoBH,EAAMI,IAC5BC,MAAO,CAAEC,KAAML,GACfC,UAAU,aAHZ,WAKE,gBAAKK,KAAKC,EAAAA,EAAAA,IAAcR,EAAMS,aAAcC,IAAI,GAAGC,MAAO,OAC1D,uBAAIX,EAAMY,YAIjB,E,SCfYC,E,OAAkBC,EAAAA,GAAH,4PCCfC,EAAY,SAAC,GAInB,IAHLC,EAGI,EAHJA,iBAGI,IAFJC,aAAAA,OAEI,MAFW,GAEX,EADJhB,EACI,EADJA,SAGA,OADAiB,QAAQC,IAAR,gBAA6BF,IAE3B,SAACJ,EAAD,CAAiBX,UAAU,aAA3B,SACGc,IAC+B,KAAb,OAAhBA,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBI,SAAgBH,GACjC,qEAEAD,EAAiBK,KAAI,SAAArB,GAAK,OACxB,SAACD,EAAD,CAAWC,MAAOA,EAAOC,SAAUA,GAAeD,EAAMI,GADhC,MAMnC,C,sHCnBYkB,E,OAAaR,EAAAA,IAAH,sS,6CCyBvB,EAlBa,WACX,OAAwCS,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,GAAWyB,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,0FAChBH,EADgB,UACMI,EAAAA,EAAAA,MADN,6EAAH,qDAGfD,GACD,GAAE,KAGD,SAACN,EAAD,WACE,SAACP,EAAA,EAAD,CAAWC,iBAAgB,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAcM,QAAS7B,SAAUA,KAGnE,C,uNCvBK8B,EAAU,mCACVC,EAAM,+BAICH,EAAgB,mCAAG,8FAChBI,EAAAA,EAAAA,IAAA,UACTD,EADS,wCAC0BD,IAFV,uCAG3BG,MAH2B,2CAAH,qDAMhBC,EAAe,mCAAG,WAAMC,GAAN,iFACfH,EAAAA,EAAAA,IAAA,UACTD,EADS,kBACII,EADJ,oBACuBL,IAFR,uCAG1BG,MAH0B,2CAAH,sDAMf1B,EAAgB,SAAA6B,GAAU,OACrCA,EAAU,yCAAqCA,GAf/C,6EAcqC,EAG1BC,EAAmB,mCAAG,WAAMF,GAAN,iFACnBH,EAAAA,EAAAA,IAAA,UACTD,EADS,kBACII,EADJ,4BAC+BL,IAFZ,uCAG9BG,MAH8B,2CAAH,sDAMnBK,EAAsB,mCAAG,WAAMH,GAAN,iFACtBH,EAAAA,EAAAA,IAAA,UACTD,EADS,kBACII,EADJ,4BAC+BL,IAFT,uCAGjCG,MAHiC,2CAAH,sDAMtBM,EAAmB,mCAAG,WAAMC,GAAN,iFACnBR,EAAAA,EAAAA,IAAA,UACTD,EADS,iCACmBD,EADnB,kBACoCU,IAFjB,uCAG9BP,MAH8B,2CAAH,qD","sources":["components/MovieCard.jsx","components/MovieList.styled.jsx","components/MovieList.jsx","components/Home.styled.jsx","pages/Home.jsx","servises/tmdbApiServise.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { setFilmPoster } from 'servises/tmdbApiServise';\n\nexport const MovieCard = ({ movie, location }) => {\n  return (\n    <li className=\"movie-item\">\n      <Link\n        to={`/movie_details/${movie.id}`}\n        state={{ from: location }}\n        className=\"movie-link\"\n      >\n        <img src={setFilmPoster(movie.poster_path)} alt=\"\" width={300} />\n        <p>{movie.title}</p>\n      </Link>\n    </li>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledMovieList = styled.ul`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n\n  .movie-item {\n    width: 300px;\n    border: 1px solid #000000;\n    text-decoration: none;\n  }\n`;\n","import { MovieCard } from './MovieCard';\nimport { StyledMovieList } from './MovieList.styled';\n\nexport const MovieList = ({\n  currentMoviesArr,\n  searchParams = \"\",\n  location,\n}) => {\n  console.log(`searchParams:`, searchParams);\n  return (\n    <StyledMovieList className=\"movie-list\">\n      {currentMoviesArr &&\n        (currentMoviesArr?.length === 0 && searchParams ? (\n          <p>Sorry, there is no movies by your request</p>\n        ) : (\n          currentMoviesArr.map(movie => (\n            <MovieCard movie={movie} location={location} key={movie.id} />\n          ))\n        ))}\n    </StyledMovieList>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledHome = styled.div`\n  .popular-movie-list {\n    display: flex;\n    gap: 40px;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n  }\n\n  .movie-item {\n    width: 300px;\n    border: 1px solid #000000;\n    text-decoration: none;\n  }\n`;\n","import { StyledHome } from 'components/Home.styled';\nimport { MovieList } from 'components/MovieList';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getPopularMovies } from 'servises/tmdbApiServise';\n\n// const popularFilmsArr = await getPopularMovies().then(movies => movies.map(movie => <p>{movie.original_title}</p>))\n// console.log(`popularFilmsArr:`, popularFilmsArr)\n\nconst Home = () => {\n  const [popularFilms, setPopularFilms] = useState();\n  const location = useLocation();\n\n  useEffect(() => {\n    const loadFilms = async () => {\n      setPopularFilms(await getPopularMovies());\n    };\n    loadFilms();\n  }, []);\n\n  return (\n    <StyledHome>\n      <MovieList currentMoviesArr={popularFilms?.results} location={location}/>\n    </StyledHome>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '49dc0fc8e483e00bf3a468afadd01091';\nconst URL = 'https://api.themoviedb.org/3';\nconst defaultPoster =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const getPopularMovies = async () => {\n  return (await axios.get(\n    `${URL}/trending/movie/week?api_key=${API_KEY}`\n  )).data;\n};\n\nexport const getMovieDetails = async movieId => {\n  return (await axios.get(\n    `${URL}/movie/${movieId}?api_key=${API_KEY}`\n  )).data;\n};\n\nexport const setFilmPoster = posterPath =>\n  posterPath ? `https://image.tmdb.org/t/p/w500${posterPath}` : defaultPoster;\n\nexport const getCurrentMovieCast = async movieId => {\n  return (await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  )).data;\n};\n\nexport const getCurrentMovieRewiews = async movieId => {\n  return (await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )).data;\n};\n\nexport const getMovieBySearchReq = async searchReq => {\n  return (await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${searchReq}`\n  )).data;\n};\n"],"names":["MovieCard","movie","location","className","to","id","state","from","src","setFilmPoster","poster_path","alt","width","title","StyledMovieList","styled","MovieList","currentMoviesArr","searchParams","console","log","length","map","StyledHome","useState","popularFilms","setPopularFilms","useLocation","useEffect","loadFilms","getPopularMovies","results","API_KEY","URL","axios","data","getMovieDetails","movieId","posterPath","getCurrentMovieCast","getCurrentMovieRewiews","getMovieBySearchReq","searchReq"],"sourceRoot":""}