{"version":3,"file":"static/js/320.8df83ee6.chunk.js","mappings":"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","sources":["components/MovieCard.jsx","components/MovieList.styled.jsx","components/MovieList.jsx","components/Movies.styled.jsx","components/SearchForm.jsx","pages/Movies.jsx","servises/tmdbApiServise.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { setFilmPoster } from 'servises/tmdbApiServise';\n\nexport const MovieCard = ({ movie, location }) => {\n  return (\n    <li className=\"movie-item\">\n      <Link\n        to={`/movie_details/${movie.id}`}\n        state={{ from: location }}\n        className=\"movie-link\"\n      >\n        <img src={setFilmPoster(movie.poster_path)} alt=\"\" width={300} />\n        <p>{movie.title}</p>\n      </Link>\n    </li>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledMovieList = styled.ul`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n\n  .movie-item {\n    width: 300px;\n    border: 1px solid #000000;\n    text-decoration: none;\n  }\n`;\n","import { MovieCard } from './MovieCard';\nimport { StyledMovieList } from './MovieList.styled';\n\nexport const MovieList = ({\n  currentMoviesArr,\n  searchParams = \"\",\n  location,\n}) => {\n  console.log(`searchParams:`, searchParams);\n  return (\n    <StyledMovieList className=\"movie-list\">\n      {currentMoviesArr &&\n        (currentMoviesArr?.length === 0 && searchParams ? (\n          <p>Sorry, there is no movies by your request</p>\n        ) : (\n          currentMoviesArr.map(movie => (\n            <MovieCard movie={movie} location={location} key={movie.id} />\n          ))\n        ))}\n    </StyledMovieList>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledMovies = styled.div`\n  .movie-list {\n    display: flex;\n    gap: 40px;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n  }\n  .movie-item {\n    width: 300px;\n    text-decoration: none;\n    border: 1px solid #000000\n  }\n`;\n","import React from 'react'\n\nexport const SearchForm = ({onSubmit, startVal}) => {\n  let firstValue = startVal\n  return (\n    <form onSubmit={onSubmit}>\n        <input type=\"text\" name=\"search\" placeholder={firstValue}/>\n        <button type=\"submit\">submit</button>\n      </form>\n  )\n}\n\n \n","import { MovieList } from 'components/MovieList';\nimport { StyledMovies } from 'components/Movies.styled';\nimport { SearchForm } from 'components/SearchForm';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieBySearchReq } from 'servises/tmdbApiServise';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [currentMoviesArr, setCurrentMoviesArr] = useState([]);\n  const location = useLocation();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ searchReq: event.target.search.value });\n  };\n\n \n\n  useEffect(() => {\n    if (!searchParams.get('searchReq')) {\n      return;\n    }\n    setCurrentMoviesArr([]);\n\n    const loadMovies = async () => {\n      const newData = await  (await getMovieBySearchReq(searchParams.get('searchReq'))).results ?? []\n      setCurrentMoviesArr(prevState => {\n        return newData;\n      });\n    };\n\n    loadMovies();\n  }, [searchParams]);\n\n  useEffect(() => {\n    console.dir(currentMoviesArr);\n  }, [currentMoviesArr]);\n\n  return (\n    <StyledMovies>\n      <SearchForm onSubmit={handleSubmit} />\n      <MovieList currentMoviesArr={currentMoviesArr} searchParams={searchParams.get('searchReq')} location={location}/>\n    </StyledMovies>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '49dc0fc8e483e00bf3a468afadd01091';\nconst URL = 'https://api.themoviedb.org/3';\nconst defaultPoster =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const getPopularMovies = async () => {\n  return (await axios.get(\n    `${URL}/trending/movie/week?api_key=${API_KEY}`\n  )).data;\n};\n\nexport const getMovieDetails = async movieId => {\n  return (await axios.get(\n    `${URL}/movie/${movieId}?api_key=${API_KEY}`\n  )).data;\n};\n\nexport const setFilmPoster = posterPath =>\n  posterPath ? `https://image.tmdb.org/t/p/w500${posterPath}` : defaultPoster;\n\nexport const getCurrentMovieCast = async movieId => {\n  return (await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  )).data;\n};\n\nexport const getCurrentMovieRewiews = async movieId => {\n  return (await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )).data;\n};\n\nexport const getMovieBySearchReq = async searchReq => {\n  return (await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${searchReq}`\n  )).data;\n};\n"],"names":["MovieCard","movie","location","className","to","id","state","from","src","setFilmPoster","poster_path","alt","width","title","StyledMovieList","styled","MovieList","currentMoviesArr","searchParams","console","log","length","map","StyledMovies","SearchForm","onSubmit","firstValue","startVal","type","name","placeholder","useSearchParams","setSearchParams","useState","setCurrentMoviesArr","useLocation","useEffect","get","loadMovies","getMovieBySearchReq","results","newData","prevState","dir","event","preventDefault","searchReq","target","search","value","API_KEY","URL","getPopularMovies","axios","data","getMovieDetails","movieId","posterPath","getCurrentMovieCast","getCurrentMovieRewiews"],"sourceRoot":""}